@using Pras.Web.Models.Forms
@model PopupPaymentFormModel
@{
    var documentManagementList = new List<string>
    {
        "Укрпочта (+20 грн.)",
        "Курьерская доставка Новая Почта (+40 грн.)",
        "Электронный документооборот (0 руб.)",
        "Самовывоз (только для Киева (0 грн.))"
    };
}

<div class="modal-overlay-cash">
    <div class="modal-cash">
        <a class="close-modal-cash">
            <img src="/site2/img/icons/close-modal-svg.svg">
        </a>
        <div class="modal-content-cash">
            <form action="order-payment" method="post">
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.Type)
                <h3 class="txt-chronomer online-calculate">Безналичный расчет</h3>
                <div class="container-cash">
                    <p class="field-validation-error">@(TempData["Error" + Model.Type])</p>
                    <div class="cash-part1">
                        <div>
                            <label class="label-data">ДАТА</label>
                            @*<input class="date-input" type="date" value="@DateTime.Today.ToString("d")">*@
                            @Html.TextBoxFor(model => model.Date, new { @class = "date-input", type = "date" })
                            @Html.ValidationMessageFor(model => model.Date)
                        </div>
                        <div>
                            <label class="label-data">СЧЕТ</label>
                            @Html.TextBoxFor(model => model.Account, new { @class = "date-input" })
                            @Html.ValidationMessageFor(model => model.Account)
                        </div>
                        <div class="input-position">
                            <div class="money-input">
                                <label class="label-data"><span class="suma-txt">@Html.DisplayNameFor(model => model.Amount)</span><br><i class="italic-suma">(Комиссия 9%)</i></label>
                                @Html.TextBoxFor(model => model.Amount, new { @class = "date-input", placeholder = "0.00" })
                                <span class="ryb-txt">руб</span>
                            </div>
                            @Html.ValidationMessageFor(model => model.Amount)
                        </div>
                        <div class="name-of-pay">
                            <div class="money-input">
                                <label class="label-data"><span class="suma-txt">НАЗВАНИЕ</span><br><span class="italic-suma">ПЛАТЕЛЬЩИКА</span></label>
                                @Html.TextBoxFor(model => model.Payer, new { @class = "date-input" })
                            </div>
                            @Html.ValidationMessageFor(model => model.Payer)
                        </div>
                    </div>
                    <div>
                        <label class="label-data"><span class="suma-txt details-txt">@Html.DisplayNameFor(model => model.Requisites)</span></label>
                        @Html.TextAreaFor(model => model.Requisites, new { @class = "input-details" })
                        @Html.ValidationMessageFor(model => model.Requisites)
                    </div>
                    <div class="input-position">
                        <div class="money-input">
                            <label class="label-data label-purpose"><span class="suma-txt">НАЗНАЧЕНИЕ</span><br><span class="italic-suma">ПЛАТЕЖА</span></label>
                            @Html.TextBoxFor(model => model.Purpose, new { @class = "date-input details-input" })
                        </div>
                        @Html.ValidationMessageFor(model => model.Purpose)
                    </div>
                    <div class="input-position">
                        <div class="money-input">
                            <label class="label-data label-email"><span class="suma-txt">@Html.DisplayNameFor(model => model.Email)</span></label>
                            @Html.TextBoxFor(model => model.Email, new { @class = "date-input details-input" })
                        </div>
                        @Html.ValidationMessageFor(model => model.Email)
                    </div>
                    <div class="chronomer-element check-elem">
                        @Html.CheckBoxFor(model => model.NeedAct, new { @checked = "checked" })<span class="txt-required">@Html.DisplayNameFor(model => model.NeedAct)</span><br>

                    </div>
                    <div class="form_radio radio-btns">
                        @Html.RadioButtonFor(model => model.Action, 0, new { id = "send", @checked = "" })
                        <label for="send" class="page-txt-chrono send-email">отправить на эл.адрес</label><br>
                        @Html.RadioButtonFor(model => model.Action, 1, new { id = "open" })
                        <label for="open" class="page-txt-chrono">открыть и распечатать</label><br>
                    </div>
                </div>
                <div class="cash-btn-form">
                    <button type="submit" class="home-btn btn-send-form">
                        ОТПРАВИТЬ
                        <svg class="btn-svg" width="8" height="15">
                            <use href="#order-svg"></use>
                        </svg>
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@*<div id="beznalUA" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog">
            <div class="modal-content">
                <form action="order-payment" method="post">
                    <div class="modal-header">
                        <button class="close" type="button" data-dismiss="modal">×</button>
                        <h4 class="modal-title">Оплата по безналичному расчету</h4>
                    </div>
                    <div class="modal-body">
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.Type)
                        <br>
                        <p class="field-validation-error">@(TempData["Error" + Model.Type])</p>
                        <div class="row">
                            <div class="col-md-4 col-hidden-sm col-hidden-xs">
                                <img src="~/site/img/doc1.png" class="img-responsive" alt="Responsive image">
                                <br><br>
                                <p class="text-justify">Обратите, пожалуйста, внимание, что итоговая сумма счета будет зависеть от способа оплаты (через ООО или ИП), а, также, от выбранного вами вида документооборота. </p>
                            </div>
                            <div class="col-md-7 col-md-offset-1 col-sm-8">
                                <div class="row">
                                    <div class="col-md-5">
                                        <p>@Html.DisplayNameFor(model => model.Date):</p>
                                    </div>
                                    <div class="col-md-7">
                                        <div class="form-group">
                                            <div class='input-group date datetimepicker'>
                                                @Html.TextBoxFor(model => model.Date, new { @class = "form-control", type = "text" })
                                                <span class="input-group-addon">
                                                    <span class="glyphicon glyphicon-calendar"></span>
                                                </span>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.Date)
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-5">
                                        <p>@Html.DisplayNameFor(model => model.Account):</p>
                                    </div>
                                    <div class="col-md-7">
                                        <div class='input-group'>
                                            @Html.TextBoxFor(model => model.Account, new { @class = "form-control" })
                                            <span class="input-group-addon">
                                                <span class="glyphicon glyphicon-list-alt"></span>
                                            </span>
                                        </div>
                                        @Html.ValidationMessageFor(model => model.Account)
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-5">
                                        <p>@Html.DisplayNameFor(model => model.Amount) в рублях:</p>
                                    </div>
                                    <div class="col-md-7">
                                        <div class='input-group'>
                                            @Html.TextBoxFor(model => model.Amount, new { @class = "form-control" })
                                            <span class="input-group-addon">
                                                <span class="glyphicon glyphicon-briefcase"></span>
                                            </span>
                                        </div>
                                        @Html.ValidationMessageFor(model => model.Amount)
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-5">
                                        <p>@Html.DisplayNameFor(model => model.PaymentMethod):</p>
                                    </div>
                                    <div class="col-md-7">
                                        <div class="radio">
                                            <label class="radio-inline">
                                                @Html.RadioButtonFor(model => model.PaymentMethod, "ООО (комиссия +10%)", new { @checked = "" })
                                                <p>ООО (комиссия +10%)</p>
                                            </label>
                                        </div>
                                        <div class="radio">
                                            <label class="radio-inline">
                                                @Html.RadioButtonFor(model => model.PaymentMethod, "ПЛП (комиссия +5%)")
                                                <p>ПЛП (комиссия +5%)</p>
                                            </label>
                                        </div>
                                        @Html.ValidationMessageFor(model => model.PaymentMethod)
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-5">
                                        <p>@Html.DisplayNameFor(model => model.Payer):</p>
                                    </div>
                                    <div class="col-md-7">
                                        <div class='input-group'>
                                            @Html.TextBoxFor(model => model.Payer, new { @class = "form-control" })
                                            <span class="input-group-addon">
                                                <span class="glyphicon glyphicon-user"></span>
                                            </span>
                                        </div>
                                        @Html.ValidationMessageFor(model => model.Payer)
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-5 col-sm-4">
                                        <p>@Html.DisplayNameFor(model => model.Purpose):</p>
                                    </div>
                                    <div class="col-md-7 col-sm-8">
                                        <div class='input-group'>
                                            @Html.TextBoxFor(model => model.Purpose, new { @class = "form-control" })
                                            <span class="input-group-addon">
                                                <span class="glyphicon glyphicon-send"></span>
                                            </span>
                                        </div>
                                        @Html.ValidationMessageFor(model => model.Purpose)
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-5">
                                        <p>@Html.DisplayNameFor(model => model.Requisites):</p>
                                    </div>
                                    <div class="col-md-7">
                                        <div class='form-group'>
                                            @Html.TextAreaFor(model => model.Requisites, new { @class = "form-control", rows = 3 })
                                            @Html.ValidationMessageFor(model => model.Requisites)
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-5">
                                        <p>@Html.DisplayNameFor(model => model.Email):</p>
                                    </div>
                                    <div class="col-md-7">
                                        <div class='input-group'>
                                            @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                                            <span class="input-group-addon">
                                                <span class="glyphicon glyphicon-envelope"></span>
                                            </span>
                                        </div>
                                        @Html.ValidationMessageFor(model => model.Email)
                                        <div class="checkbox">
                                            <label>
                                                @Html.CheckBoxFor(model => model.NeedAct)
                                                <p>@Html.DisplayNameFor(model => model.NeedAct)</p>
                                            </label>
                                        </div>
                                        <div class="radio">
                                            <label>
                                                @Html.RadioButtonFor(model => model.Action, 0, new { @checked = "" })
                                                <p> Отправить по e-mail</p>
                                            </label>
                                        </div>
                                        <div class="radio">
                                            <label>
                                                @Html.RadioButtonFor(model => model.Action, 1)
                                                <p>Открыть и распечатать</p>
                                            </label>
                                        </div>
                                        @Html.ValidationMessageFor(model => model.Action)
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-5">
                                        <p>@Html.DisplayNameFor(model => model.DocumentManagement):</p>
                                    </div>
                                    <div class="col-sm-7">
                                        @Html.DropDownListFor(model => model.DocumentManagement, new SelectList(documentManagementList.ToDictionary(p => p, p => p), "Key", "Value", Model.DocumentManagement), "", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.DocumentManagement)
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-default" type="button" data-dismiss="modal">Закрыть</button>
                        <button class="btn btn-success" type="submit">Отправить</button>
                    </div>
                </form>
            </div>
        </div>
    </div>*@