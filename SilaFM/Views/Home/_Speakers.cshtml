@using Newtonsoft.Json
@using Pras.Shared.Enums
@using Pras.Shared.Enums.Extensions
@using Pras.Web.Models.Forms
@model List<SpeakerViewModel>

@section Scripts{
    <script src="~/site2/js/speakers.js"></script>
}
<div class="container-table">
    <table id="audio-table">
        <tr>
            <th>Слушать</th>
            <th>Фамилия, имя диктора</th>
            <th>Статус</th>
            @if ((bool)ViewData["isLang"])
            {
                <th>Язык</th>
            }
            @if (ViewData["price"].ToString() != "у.е.")
            {
                <th>Цена до 30 слов,<br> @ViewData["price"].</th>
                <th>Цена до 70 слов,<br> @ViewData["price"].</th>
            }
            else
            {
                <th>Цена,<br> @ViewData["price"]</th>
            }
            <th>Сроки выполнения*</th>
            <th>Заказать</th>
        </tr>
        @foreach (var item in Model)
        {
            var status = EnumExtensions.GetDescription(item.Status);
            <tr>
                <td class="play-music">
                    <section class="player audio-playlist js_music-inner" data-play-state="play" data-mute-state="unmute">
                        <audio src="@item.Demo" loop></audio>
                        <div class="details">
                            <div class="now-playing1"></div>
                            <div class="track-art1"></div>
                            <div class="track-name1"></div>
                            <div class="track-artist1"></div>
                        </div>
                        <div class="controls">
                            <div class="play-controls">
                                <button type="button" class="btn-control btn-play pause js_play">
                                    <svg class="icon-play">
                                        <use xlink:href="#icon-play"></use>
                                    </svg>
                                    <svg class="icon-pause">
                                        <use xlink:href="#icon-pause"></use>
                                    </svg>
                                </button>
                                <input type="range" class="control-range range-music js_range-track" max="100" value="0">
                            </div>
                            <div class="volume-controls">
                                <button type="button" class="btn-control btn-volume js_volume">
                                    <svg class="icon-volume icon-volume-audio">
                                        <use xlink:href="#icon-volume"></use>
                                    </svg>
                                </button>
                                <input type="range" class="control-range range-volume js_range-volume" max="100" value="100">
                            </div>
                            <a href="@item.Demo" download target="_blank" class="btn-download">
                                <svg>
                                    <use xlink:href="#icon-download"></use>
                                </svg>
                            </a>
                        </div>
                    </section>
                </td>
                <td class="name-speak">
                    <a href="@Url.Action("Inner", "Home", new {url = item.Url})">@item.Name @(item.VacationEndDate.HasValue && item.VacationEndDate > DateTime.Today ? $"(н/д до {item.VacationEndDate.Value.ToShortDateString()})" : "")</a>
                </td>
                <td>
                    @switch (item.Status)
                    {
                        case SpeakerStatuses.InStudio:
                            <div class="in-studio-txt">
                                <div class="eclips"></div>@status
                            </div>
                            break;
                        case SpeakerStatuses.Order:
                            <div class="in-studio-txt for-order">
                                <div class="eclips for-order-e"></div>@status
                            </div>
                            break;
                        case SpeakerStatuses.OutOfService:
                            <div class="in-studio-txt for-order">
                                <div class="eclips for-order-e"></div>@status
                            </div>
                            break;
                        case SpeakerStatuses.Offline:
                            <div class="in-studio-txt for-order">
                                <div class="eclips for-order-e"></div>@status
                            </div>
                            break;
                    }
                </td>
                @if ((bool)ViewData["isLang"])
                {
                    <td>@String.Join(", ", item.VoiceLanguages.Select(p => p.Name))</td>
                }
                @if (ViewData["price"].ToString() != "у.е.")
                {
                    <td>@item.Price30</td>
                    <td>@item.Price90</td>
                }
                else
                {
                    <td>@item.Price30</td>
                }
                <td>@item.TermsStr</td>
                <td class="modal-btn-order">
                    <button class="btn-card js_open-modal" data-ng-click="speaker='@item.Name'">
                        <svg class="buy-icon" width="24" height="24"
                             viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <g clip-path="url(#clips0)">
                                <path d="M7.78125 15.5158H20.4846C20.7991 15.5158 21.0751 15.3078 21.1602 15.0057L23.9729 5.16174C24.0333 4.94953 23.9919 4.72156 23.8588 4.54523C23.7255 4.36945 23.5182 4.26563 23.2971 4.26563H6.15802L5.6554 2.00391C5.58398 1.68182 5.29834 1.45312 4.96875 1.45312H0.703125C0.314575 1.45312 0 1.7677 0 2.15625C0 2.54498 0.314575 2.85938 0.703125 2.85938H4.40442L6.94354 14.2852C6.19647 14.61 5.67188 15.3536 5.67188 16.2189C5.67188 17.382 6.61816 18.3283 7.78125 18.3283H20.4846C20.8733 18.3283 21.1877 18.0139 21.1877 17.6252C21.1877 17.2366 20.8733 16.9221 20.4846 16.9221H7.78125C7.39398 16.9221 7.07812 16.6069 7.07812 16.2189C7.07812 15.8309 7.39398 15.5158 7.78125 15.5158Z"
                                      fill="url(#paint0_linearw)" />
                                <path d="M7.07812 20.4377C7.07812 21.601 8.02441 22.5471 9.18768 22.5471C10.3508 22.5471 11.2971 21.601 11.2971 20.4377C11.2971 19.2747 10.3508 18.3284 9.18768 18.3284C8.02441 18.3284 7.07812 19.2747 7.07812 20.4377Z"
                                      fill="url(#paint1_linearw)" />
                                <path d="M16.9688 20.4377C16.9688 21.601 17.915 22.5471 19.0781 22.5471C20.2414 22.5471 21.1875 21.601 21.1875 20.4377C21.1875 19.2747 20.2414 18.3284 19.0781 18.3284C17.915 18.3284 16.9688 19.2747 16.9688 20.4377Z"
                                      fill="url(#paint2_linearw)" />
                            </g>
                            <defs>
                                <linearGradient id="paint0_linearw" x1="0" y1="18.3283" x2="7.86034" y2="-0.0910776"
                                                gradientUnits="userSpaceOnUse">
                                    <stop stop-color="#483156" />
                                    <stop offset="1" stop-color="#39516E" />
                                </linearGradient>
                                <linearGradient id="paint1_linearw" x1="7.07812" y1="22.5471" x2="9.49243"
                                                y2="18.569" gradientUnits="userSpaceOnUse">
                                    <stop stop-color="#483156" />
                                    <stop offset="1" stop-color="#39516E" />
                                </linearGradient>
                                <linearGradient id="paint2_linearw" x1="16.9688" y1="22.5471" x2="19.3831"
                                                y2="18.5691" gradientUnits="userSpaceOnUse">
                                    <stop stop-color="#483156" />
                                    <stop offset="1" stop-color="#39516E" />
                                </linearGradient>
                                <clipPath id="clips0">
                                    <rect width="24" height="24" fill="white" />
                                </clipPath>
                            </defs>
                        </svg>
                    </button>
                </td>
            </tr>
        }
        <tr class="last-tr">
            <td class="last-left" colspan="10" style="position: initial">
                @if ((bool)ViewData["isLang"])
                {
                    @(ViewData["price"].ToString() == "у.е." ? "* Примечание: Цены указаны в долларах" : "")<br />
                }
                else if (ViewData["price"].ToString() == "у.е.")
                {
                    <text>* Примечание: Цены указаны в долларах</text><br />
                }
                else
                {
                    if (ViewData["price"].ToString() == "грн")
                    {
                        <text>* Примечание: Цены указаны в гривнах</text><br />
                    }
                }
                * Примечание: время указано с момента оплаты
            </td>
        </tr>
    </table>
</div>



@*<table class="features-table">
        <thead>
            <tr style="height: 70px;">
                <td class="grey players">Слушать</td>
                <td>Фамилия, имя диктора</td>
                <td class="grey">Статус</td>
                @if ((bool)ViewData["isLang"])
                {
                    <td class="grey">Язык</td>
                }
                @if (ViewData["price"].ToString() != "у.е.")
                {
                    <td class="grey">Цена до 30 слов,<br> @ViewData["price"].</td>
                    <td class="grey">Цена до 70 слов,<br> @ViewData["price"].</td>
                }
                else
                {
                    <td class="grey">Цена,<br> @ViewData["price"]</td>
                }
                <td class="green">Сроки выполнения*</td>
                <td class="grey">Заказать</td>
            </tr>
        </thead>
        <tfoot>
            <tr>
                <td class="grey"></td>
                <td nowrap></td>
                <td class="grey"></td>
                @if ((bool)ViewData["isLang"])
                {
                    <td class="grey" colspan="2">@(ViewData["price"].ToString() == "у.е." ? "Цены указаны в долларах" : "")</td>
                }
                else if (ViewData["price"].ToString() == "у.е.")
                {
                    <td class="grey">Цены указаны в долларах</td>
                }
                else
                {
                    if (ViewData["price"].ToString() == "грн")
                    {
                        <td class="grey" colspan="2">Цены указаны в гривнах</td>
                    }
                    else
                    {
                        <td class="grey" colspan="2"></td>
                    }
                }
                <td class="green">*после момента оплаты</td>
                <td class="grey"></td>
            </tr>
        </tfoot>
        <tbody>
            @foreach (var item in Model)
            {
                var status = EnumExtensions.GetDescription(item.Status);
                <tr>
                    <td class="grey">
                        <audio controls><source src="@item.Demo" type="audio/mpeg"></audio>
                    </td>
                    <td>
                        @if (item.IsNovelty)
                        {<img class="new_img" alt="new" src="~/site/img/new.gif">}
                        <a class="white" title="заказать: @item.Name" href="@Url.Action("Inner", "Home", new {url = item.Url})">@item.Name @(item.VacationEndDate.HasValue && item.VacationEndDate > DateTime.Today ? $"(н/д до {item.VacationEndDate.Value.ToShortDateString()})" : "")</a>
                    </td>
                    <td class="grey">
                        @switch (item.Status)
                        {
                            case SpeakerStatuses.InStudio:
                                <p style="display: none;">2</p>
                                <img src="~/site/img/green.png" alt="@status" title="@status" style="width: 30px;">
                                break;
                            case SpeakerStatuses.Order:
                                <p style="display: none;">1</p> <img src="~/site/img/yellow.png" alt="@status" title="@status" style="width: 30px;">
                                break;
                            case SpeakerStatuses.OutOfService:
                                <img src="~/site/img/red.png" alt="@status" title="@status" style="width: 30px;">
                                break;
                            case SpeakerStatuses.Offline:
                                <img src="~/site/img/grey.png" alt="@status" title="@status" style="width: 30px;">
                                break;
                        }
                    </td>
                    @if ((bool)ViewData["isLang"])
                    {
                        <td class="grey">@String.Join(", ", item.VoiceLanguages.Select(p => p.Name))</td>
                    }
                    @if (ViewData["price"].ToString() != "у.е.")
                    {
                        <td class="grey">@item.Price30</td>
                        <td class="grey">@item.Price90</td>
                    }
                    else
                    {
                        <td class="grey">@item.Price30</td>
                    }
                    <td class="green">@item.TermsStr</td>
                    <td class="grey">
                        <a href="@Url.Action("Order", "Home", new { speaker = item.Name })"><i class="fa fa-shopping-cart" aria-hidden="true"></i></a>
                    </td>
                </tr>
            }
        </tbody>
    </table>*@
